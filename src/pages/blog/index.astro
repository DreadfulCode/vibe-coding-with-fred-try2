---
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';
import { getCollection } from 'astro:content';

// Get all blog posts from the content collection
const allPosts = await getCollection('blog');

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// All unique tags
const allTags = [...new Set(sortedPosts.flatMap(post => post.data.tags))].sort();

// Filter functionality would be implemented with client-side JS in a real application
---

<Layout title="Blog">
  <div class="bg-gradient-to-b from-primary-50 to-white py-12">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="max-w-3xl mx-auto text-center">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">The Blog</h1>
        <p class="text-lg text-gray-600">
          Tutorials, code examples, and insights for modern web developers.
        </p>
      </div>
    </div>
  </div>
  
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Filters & Search -->
    <div class="mb-8 flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
      <!-- Tag Filter -->
      <div class="flex flex-wrap gap-2 max-w-xl">
        <button class="px-3 py-1 text-sm font-medium rounded-full bg-primary-100 text-primary-800 hover:bg-primary-200">
          All
        </button>
        {allTags.slice(0, 8).map(tag => (
          <button class="px-3 py-1 text-sm font-medium rounded-full bg-gray-100 text-gray-800 hover:bg-gray-200">
            #{tag}
          </button>
        ))}
        <button class="px-3 py-1 text-sm font-medium rounded-full bg-gray-100 text-gray-800 hover:bg-gray-200">
          More...
        </button>
      </div>
      
      <!-- Search -->
      <div class="relative w-full md:w-64">
        <input 
          type="text"
          placeholder="Search posts..."
          class="w-full px-4 py-2 pl-10 text-sm text-gray-900 bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
        />
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-500 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
      </div>
    </div>
    
    <!-- Blog Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {sortedPosts.map(post => (
        <PostCard post={{
          title: post.data.title,
          description: post.data.description,
          pubDate: post.data.pubDate,
          image: post.data.image,
          tags: post.data.tags,
          slug: post.slug,
          featured: post.data.featured
        }} />
      ))}
    </div>
    
    <!-- Pagination -->
    <div class="mt-12 flex justify-center">
      <nav class="inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
        <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
          <span class="sr-only">Previous</span>
          <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
        </a>
        <a href="#" aria-current="page" class="relative inline-flex items-center px-4 py-2 border border-primary-500 bg-primary-50 text-sm font-medium text-primary-600 hover:bg-primary-100">
          1
        </a>
        <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
          2
        </a>
        <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
          3
        </a>
        <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">
          ...
        </span>
        <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
          8
        </a>
        <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
          <span class="sr-only">Next</span>
          <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </a>
      </nav>
    </div>
  </div>
</Layout>